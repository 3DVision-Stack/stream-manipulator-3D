<library path="lib/libfilter_plugins">
    <class name="filter/cropbox" type="sm3d::filters::CropBox"
        base_class_type="sm3d::Plugin">
        <description>
            Wrapping of pcl::CropBox filter. Removes everything inside/outside a
            given box.
        </description>
    </class>
    <class name="filter/frustum_culling" type="sm3d::filters::Frustum"
        base_class_type="sm3d::Plugin">
        <description>
            Wrapping of pcl::FrustumCulling filter. Removes everything inside/outside a
            frustum, defined by two aperture angles and two parallel planes.
        </description>
    </class>
    <class name="filter/median" type="sm3d::filters::Median"
        base_class_type="sm3d::Plugin">
        <description>
            Wrapping of  pcl::MedianFilter filter. The  median filter is  one of
            the simplest and  wide-spread image processing filters.  It is known
            to perform  well with  "shot"/impulse noise (some  individual pixels
            having extreme values), it does  not reduce contrast across steps in
            the function (as compared to filters  based on averaging), and it is
            robust  to outliers.  Furthermore,  it is  simple  to implement  and
            efficient, as it requires a single  pass over the image. It consists
            of a  moving window  of fixed  size that replaces  the pixel  in the
            center with the median inside the window.

            NOTE: This filters  only the  depth (z-component)  of organized  and
            untransformed (i.e.,  in camera coordinates) point  clouds. An error
            will be outputted if an unorganized cloud is given.
        </description>
    </class>
    <class name="filter/passthrough" type="sm3d::filters::PassThrough"
        base_class_type="sm3d::Plugin">
        <description>
            Wrapping of  pcl::PassThrough filter.  PassThrough passes  points in
            a  cloud  based on  constraints  for  one  particular field  of  the
            point type.  Iterates through  the entire input  once, automatically
            filtering  non-finite points  and  the points  outside the  interval
            specified  by the  filter limits,  which applies  only to  the field
            specified by field type.
        </description>
    </class>
    <class name="filter/voxel_grid" type="sm3d::filters::VoxelGrid"
        base_class_type="sm3d::Plugin">
        <description>
            Wrapping of  pcl::VoxelGrid filter.  Downsample point cloud  data by
            overlapping a grid of voxels, with user specified dimensions.

            It creates  a 3D voxel grid  (think about a  voxel grid as a  set of
            tiny  3D boxes  in space)  over the  input point  cloud data.  Then,
            in  each voxel  (i.e.,  3D  box), all  the  points  present will  be
            approximated (i.e., downsampled) with  their centroid. This approach
            is  a bit  slower than  approximating them  with the  center of  the
            voxel, but it represents the underlying surface more accurately.
        </description>
    </class>
</library>
<library path="lib/liboutput_plugins">
    <class name="output/publisher" type="sm3d::output::Publisher"
        base_class_type="sm3d::Plugin">
        <description>
            Outputs stream to a topic of your choice.
        </description>
    </class>
</library>
